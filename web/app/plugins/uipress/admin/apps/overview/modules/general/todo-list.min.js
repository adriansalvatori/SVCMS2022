export function moduleName(){return"todo-list"};export function moduleData(){return{props:{cardData:Object,overviewData:Object},data:function(){return{cardOptions:this.cardData,toDoList:[],newItem:{description:""}}},mounted:function(){this.getQuote()},watch:{overviewData:{handler(t,i){this.getQuote()},deep:!0},toDoList:{handler(t,i){this.cardOptions.toDoList=this.toDoList},deep:!0},toDoList:function(t,i){t.toDoList!=i.toDoList&&this.$emit("card-change",t)}},computed:{toDoListFormatted(){let t=this.toDoList,i=[];for(var o=0;o<t.length;o++)1==t[o].status||"true"==t[o].status?t[o].status=!0:t[o].status=!1,i.push(t[o]);return i.length>0?(this.toDoList=i,this.toDoList):[]}},methods:{returnList(t){this.cardOptions.toDoList=t,this.$emit("card-change",this.cardOptions)},addToDo(){""!=this.newItem.description&&(this.toDoList.unshift({description:this.newItem.description,status:!1,date:moment().format("MMMM Do YYYY, h:mm a")}),this.newItem.description="",this.returnList(this.toDoList),this.$root.saveDash(!1))},removeToDo(t){this.toDoList.splice(t,1),this.returnList(this.toDoList),this.$root.saveDash(!1)},toggleToDoStatus(t){1==this.toDoList[t].status||"true"==this.toDoList[t].status?this.toDoList[t].status=!1:this.toDoList[t].status=!0,this.returnList(this.toDoList),this.$root.saveDash(!1)},getQuote(){let t=this;this.cardOptions.toDoList&&Array.isArray(this.cardOptions.toDoList)&&(t.toDoList=this.cardOptions.toDoList)}},template:'<div v-if="!overviewData.ui.editingMode" class="uip-padding-s">        <div class="uip-margin-bottom-m uip-flex uip-flex-row uip-gap-m">          <div class="uip-flex-grow">            <textarea rows="1" v-model="newItem.description"             class="uip-w-100p" :placeholder="overviewData.translations.newToDo"></textarea>          </div>          <div><button class="uip-button-default " @click="addToDo()">{{overviewData.translations.add}}</button></div>        </div>        <div class="uip-overflow-hidden">          <TransitionGroup name="uip-remove-list" tag="div">            <div v-for="(item, index) in toDoListFormatted" :key="item.description">                <div class="uip-flex uip-flex-row uip-margin-bottom-xs uip-gap-s uip-padding-xxs uip-border-round hover:uip-background-muted uip-flex-center">                  <div class="uip-w-28 uip-flex-no-shrink">                    <input type="checkbox" v-model="item.status">                  </div>                  <div class="uip-flex uip-flex-column uip-flex-grow uip-flex-start uip-cursor-pointer" @click="toggleToDoStatus(index)">                    <div class="uip-text-bold">{{item.description}}</div>                    <div class="uip-text-muted uip-flex uip-gap-xxs">                      <span class="material-icons-outlined" style="font-size: 1em;">calendar_today</span>                      <span>{{item.date}}</span>                    </div>                  </div>                  <div class="">                    <div class="uip-background-muted uip-border-round hover:uip-background-grey uip-cursor-pointer material-icons-outlined uip-padding-xxs" @click="removeToDo(index)">                      delete                    </div>                  </div>                </div>            </div>          </TransitionGroup>        </div>\t\t </div>'}};