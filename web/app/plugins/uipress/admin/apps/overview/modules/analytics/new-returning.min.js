export function moduleName(){return"new-returning"};export function moduleData(){return{props:{cardData:Object,overviewData:Object},data:function(){return{chartData:[],colors:["rgba(12, 92, 239, 1)","rgb(104, 152, 241)","rgb(173, 197, 242)"],cardOptions:this.cardData,sub:!0,analytics:!1,error:!1,errorMsg:""}},watch:{overviewData:{handler(a,e){this.getData()},deep:!0},cardOptions:{handler(a,e){this.$emit("card-change",a)},deep:!0}},mounted:function(){this.getData()},computed:{isGAconnected(){return this.analytics},getTheDates(){return this.tableData.report.dates},getTheType:()=>"doughnut",returnGAdata(){return this.overviewData.globalDataObject.data.analytics}},methods:{createChartDataDoughnut(){let a=[],e=this,t=0;a={labels:[],datasets:[]};for(var r=0;r<e.deviceData.length;r++){var i=e.deviceData[r];t+=parseInt(i.value)}for(r=0;r<e.deviceData.length;r++){i=e.deviceData[r];var o=t-parseInt(i.value),n={label:i.name,fill:!0,data:[i.value,o],backgroundColor:[e.colors[r],"rgba(169, 169, 169, 17%)"],borderColor:["rgba(255,255,255,1)","rgba(12, 92, 239, 0)"],borderWidth:0,borderRadius:20,chartTitle:e.overviewData.translations.deviceCategory,toolTipLabels:i.name,toolTipType:"label"};a.datasets.push(n),a.datasets.push({weight:.6}),a.labels.push(i.name)}return a},getData(){let a=this;if(a.error=!1,!a.overviewData.globalDataObject.loading){if(!a.returnGAdata)return a.error=!0,void(a.errorMsg=a.overviewData.translations.analyticsDataUnavailable);if(a.returnGAdata.error)return a.error=!0,void(a.errorMsg=a.returnGAdata.message);if(a.returnGAdata.no_account&&1==a.returnGAdata.no_account)a.analytics=!1;else{if(!a.returnGAdata.gafour)return a.error=!0,void(a.errorMsg=a.overviewData.translations.requiresGAfour);a.analytics=!0,a.deviceData=a.returnGAdata.new_returning.report.data,a.chartData=a.createChartDataDoughnut(),a.tableData=a.returnGAdata.timeline}}},returnWidth:a=>"width:"+a+"%"},template:'<div class="uip-padding-s uip-position-relative" :accountConnected="isGAconnected">       <div v-if="error" class="uip-background-red-wash uip-padding-s uip-border-round">{{errorMsg}}</div>       <premium-overlay v-if="sub && overviewData.account != true" :translations="overviewData.translations"></premium-overlay>        <template v-else>  \t  \t  <loading-placeholder v-if="overviewData.globalDataObject.loading == true"></loading-placeholder>          <connect-google-analytics @account-connected="getData()" :translations="overviewData.translations" v-if="overviewData.globalDataObject.loading != true && !isGAconnected && !error"></connect-google-analytics>          <div v-if="!overviewData.ui.editingMode && overviewData.globalDataObject.loading != true && isGAconnected">            <div class="uip-flex uip-grid uip-grid-small uip-flex-center">              <div class="uip-width-medium">                <uip-chart :removeLabels="true" :dates="getTheDates" v-if="overviewData.globalDataObject.loading != true" :type="getTheType" :chartData="chartData"  :gridLines="false" cWidth="200px"></uip-chart>              </div>              <div class="uip-width-medium uip-flex uip-flex-column uip-margin-left-s" >                <div v-for="(item, index) in deviceData"                 class="uip-flex uip-flex-center uip-border-round uip-padding-xs uip-flex uip-flex-column uip-flex-start" >                  <div class="uip-flex uip-margin-bottom-xxs">                    <span class="uip-text-bold uip-text-l">{{item.percent_total}}%</span>                  </div>                  <div class="uip-text-bold uip-margin-right-xs uip-text-capitalize uip-text-muted">                    <span :style="{\'background\' : colors[index]}" class="uip-margin-right-xxs uip-border-round uip-h-10 uip-w-10 uip-display-inline-block"></span>                    <span>{{item.name}}</span>                  </div>                </div>              </div>            </div>          </div>      </template>\t\t </div>'}};export default function(){console.log("Loaded")};