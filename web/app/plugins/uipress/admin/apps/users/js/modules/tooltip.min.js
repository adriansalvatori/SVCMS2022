export function moduleData(){return{props:{tooltiptext:String},data:function(){return{showTip:!1,translation:this.tooltiptext,tipWidth:100}},watch:{showTip:function(t,e){let i=this;setTimeout(function(){i.setPosition()},1)}},computed:{},methods:{setPosition(){if(self=this,!this.showTip)return;if(null==self.$el)return;let t=self.$refs.dynamictip;self.tipWidth=t.getBoundingClientRect().width;let e=self.$el.getBoundingClientRect().width,i=self.$el.getBoundingClientRect().height,s=e/2,l=self.$el.getBoundingClientRect().top-i-5,n=self.$el.getBoundingClientRect().left-self.tipWidth/2+s;self.$refs.dynamictip.style.top=l+"px",self.$refs.dynamictip.style.left=n+"px"},justTheTip(){this.showTip=!0},hideTheTip(){this.showTip=!1}},template:'<div class="" @mouseenter="justTheTip()" @mouseleave="hideTheTip()">          <slot></slot>          <div v-if="showTip" class="uip-position-fixed uip-tooltip" ref="dynamictip">{{translation}}</div>      </div>'}};