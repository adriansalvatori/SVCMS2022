export function moduleData(){return{props:{data:Object,dataChange:Function},data:function(){return{loading:!0,modData:this.data,tableData:[],tablePage:1,selectAll:!1,queryRunning:!1,tableFilters:{search:"",roles:[],dateCreated:{type:"on",date:""}},tableOptions:{direction:"ASC",sortBy:"username",perPage:20},ui:{rolePanelOpen:!1,activeRole:[],newRoleOpen:!1,cloneRole:{}}}},mounted:function(){this.loading=!1,this.getRoleData()},watch:{modData:{handler(e,t){this.dataChange(e)},deep:!0},tableFilters:{handler(e,t){this.getRoleData()},deep:!0},tableOptions:{handler(e,t){this.getRoleData()},deep:!0},selectAll:{handler(e,t){1==e?this.selectAllUsers():this.deSelectAllUsers()}}},computed:{returnTableData(){return this.tableData},totalSelected(){let e=this,t=0;for(var a in e.tableData.roles)e.tableData.roles[a].selected&&1==e.tableData.roles[a].selected&&(t+=1);return t},getTotalSelected(){let e=this,t=[];for(var a in e.tableData.roles)e.tableData.roles[a].selected&&1==e.tableData.roles[a].selected&&t.push(e.tableData.roles[a]);return t}},methods:{selectAllUsers(){let e=this;for(var t in e.tableData.roles)e.tableData.roles[t].selected=!0;e.selectAll=!0},deSelectAllUsers(){let e=this;for(var t in e.tableData.roles)e.tableData.roles[t].selected=!1;e.selectAll=!1},changePage(e){"next"==e&&(this.tablePage+=1),"previous"==e&&(this.tablePage=this.tablePage-1),this.getRoleData()},updateRoles(e){this.tableFilters.roles=e},getRoleData(){let e=this;e.queryRunning||(e.queryRunning=!0,jQuery.ajax({url:uip_user_app_ajax.ajax_url,type:"post",data:{action:"uip_get_role_table_data",security:uip_user_app_ajax.security,tablePage:e.tablePage,filters:e.tableFilters,options:e.tableOptions},success:function(t){let a=JSON.parse(t);if(e.queryRunning=!1,a.error)return void uipNotification(a.error,{pos:"bottom-left",status:"danger"});let l=[];e.tableData.columns&&e.tableData.columns.length>0&&(l=e.tableData.columns),e.tableData=a.tableData,l.length>0&&(e.tableData.columns=l)}}))},deleteRole(e){let t=this;confirm(t.data.translations.confirmRoleDelete)&&jQuery.ajax({url:uip_user_app_ajax.ajax_url,type:"post",data:{action:"uip_delete_role",security:uip_user_app_ajax.security,role:e},success:function(e){let a=JSON.parse(e);a.error?uipNotification(a.error,{pos:"bottom-left",status:"danger"}):(uipNotification(a.message,{pos:"bottom-left",status:"danger"}),t.getRoleData())}})},bulkDeleteRoles(){let e=this;if(!confirm(e.data.translations.confirmRoleDeleteMultiple))return;let t=e.getTotalSelected;jQuery.ajax({url:uip_user_app_ajax.ajax_url,type:"post",data:{action:"uip_delete_roles",security:uip_user_app_ajax.security,roles:t},success:function(t){let a=JSON.parse(t);if(a.error)uipNotification(a.error,{pos:"bottom-left",status:"danger"});else{if(uipNotification(a.message,{pos:"bottom-left",status:"danger"}),a.undeleted.length>0)for(var l in a.undeleted){let e=a.undeleted[l],t=e.role+"<br>"+e.message;uipNotification(t)}e.getRoleData()}}})},openMessenger(e){this.ui.messageRecipient=e,this.ui.messagePanelOpen=!0},cloneRole(e){this.ui.cloneRole=e,this.ui.newRoleOpen=!0}},template:'<div class="uip-margin-top-m uip-text-normal">          <div class="uip-margin-bottom-s uip-flex uip-flex-between">            <div class="uip-flex uip-gap-xs">              <div class="uip-background-muted uip-padding-xs uip-border-round hover:uip-background-grey uip-flex uip-flex-center uip-max-w-400">                <span class="material-icons-outlined uk-form-icon uip-margin-right-xs">search</span>                <input class="uip-blank-input uip-w-100p" :placeholder="data.translations.searchRoles" v-model="tableFilters.search">              </div>            </div>            <div class="uip-flex uip-gap-xs">              <button class="uip-button-secondary uip-flex uip-gap-xxs uip-flex-center" type="button" @click="ui.newRoleOpen = true">                <span>{{data.translations.newRole}}</span>                <span class="material-icons-outlined">badge</span>              </button>              <offcanvas :open="ui.newRoleOpen" :closeOffcanvas="function() {ui.newRoleOpen = false}">                <new-role :resetclone="function() {ui.cloneRole = {}}" :appdata="data"  :clonerole="ui.cloneRole" :refreshTable="getRoleData" :closePanel="function() {ui.newRoleOpen = false}"></new-role>              </offcanvas>            </div>          </div>\t  \t    <table class="uip-w-100p uip-border-collapse uip-margin-bottom-s">              <thead>                  <tr class="uip-border-bottom" >                      <th class="uip-text-left uip-w-28 uip-padding-xs"><input type="checkbox" v-model="selectAll"></th>                      <template v-for="column in returnTableData.columns">                        <th class="uip-text-left uip-text-bold uip-text-muted uip-padding-xs" v-if="column.active" :class="{\'uip-hidden-small\' : !column.mobile}">                          {{column.label}}                        </th>                      </template>                      <th></th>                  </tr>              </thead>              <tbody>                  <template v-for="role in returnTableData.roles">                    <tr class="hover:uip-background-muted uip-cursor-pointer" @dblclick="ui.rolePanelOpen = true; ui.activeRole = role">                        <td class="uip-border-bottom uip-w-28 uip-padding-xs"><input class="" type="checkbox" v-model="role.selected"></td>                        <template v-for="column in returnTableData.columns">                          <td class="uip-text-left uip-padding-xs uip-border-bottom" v-if="column.active" :class="{\'uip-hidden-small\' : !column.mobile}">                            <div v-if="column.name == \'label\'" class="uip-flex uip-flex-center uip-gap-xs uip-text-bold">                              <span>{{role[column.name]}}</span>                            </div>                            <div v-else-if="column.name == \'roles\'" class="uip-flex uip-flex-wrap uip-gap-xs uip-row-gap-xxs">                              <div v-for="role in role.roles" class="uip-background-primary-wash uip-border-round uip-padding-left-xxs uip-padding-right-xxs uip-text-bold uip-text-s">                                {{role}}                              </div>                            </div>                            <div v-else>{{role[column.name]}}</div>                          </td>                        </template>                        <td class="uip-border-bottom">                          <div class="uip-flex">                            <dropdown type="icon" icon="more_horiz" pos="bottom-right" buttonsize="small"                             :tooltip="true" :tooltiptext="data.translations.roleOptions" :width="200">                              <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs uip-w-200">                                <div class="uip-flex uip-gap-xs uip-border-round uip-cursor-pointer hover:uip-background-muted uip-padding-xxs" @click="ui.rolePanelOpen = true; ui.activeRole = role">                                  <div class="material-icons-outlined">edit</div>                                  <div>{{data.translations.editRole}}</div>                                </div>                                <div class="uip-flex uip-gap-xs uip-border-round uip-cursor-pointer hover:uip-background-muted uip-padding-xxs" @click="cloneRole(role)">                                  <div class="material-icons-outlined">content_copy</div>                                  <div>{{data.translations.clone}}</div>                                </div>                                <div class="uip-flex uip-gap-xs uip-border-round uip-cursor-pointer hover:uip-background-muted uip-padding-xxs" @click="deleteRole(role)">                                  <div class="material-icons-outlined">delete</div>                                  <div>{{data.translations.deleteRole}}</div>                                </div>                              </div>                            </dropdown>                          </div>                        </td>                    </tr>                  </template>              </tbody>          </table>\t    </div>      <div class="uip-position-fixed uip-right-0 uip-bottom-0 uip-padding-m uip-z-index-9 uip-text-normal" v-if="totalSelected > 0">        <div class="uip-position-relative">          <dropdown type="text" icon="more_horiz" :buttontext="totalSelected + \' \' + data.translations.rolesSelected"          pos="bottom-right" buttonsize="medium" :tooltip="false" :width="200" buttonstyle="primary">            <div class="uip-padding-xs uip-w-200 uip-flex uip-flex-column uip-row-gap-xxs">              <div class="uip-flex uip-gap-xs uip-border-round uip-cursor-pointer hover:uip-background-muted uip-padding-xxs" @click="bulkDeleteRoles()">                <div class="material-icons-outlined">delete</div>                <div>{{data.translations.deleteSelected}}</div>              </div>              <div class="uip-flex uip-gap-xs uip-border-round uip-cursor-pointer hover:uip-background-muted uip-padding-xxs" @click="deSelectAllUsers()">                <div class="material-icons-outlined">backspace</div>                <div>{{data.translations.clearSelection}}</div>              </div>            </div>          </dropdown>        </div>      </div>      <offcanvas :open="ui.rolePanelOpen" :closeOffcanvas="function() {ui.rolePanelOpen = false}">        <role-panel :appdata="data" :activerole="ui.activeRole" :refreshTable="getRoleData" :closePanel="function() {ui.rolePanelOpen = false}"></role-panel>      </offcanvas>'}};