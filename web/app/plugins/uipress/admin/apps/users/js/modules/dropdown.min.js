export function moduleData(){return{props:{type:String,icon:String,pos:String,buttonsize:String,buttontext:String,tooltip:Boolean,tooltiptext:String,width:Number,buttonstyle:String},data:function(){return{modelOpen:!1,dropWidth:0}},destroyed(){window.removeEventListener("scroll",this.handleScroll,!1)},methods:{handleScroll(t){var e=this.setPosition();this.$el.getElementsByClassName("uip-dropdown-conatiner")[0].setAttribute("style",e)},onClickOutside(t){const e=t.path||(t.composedPath?t.composedPath():void 0);!e||e.includes(this.$el)||this.$el.contains(t.target)||this.closeThisComponent()},openThisComponent(){this.modelOpen=1!=this.modelOpen,1==this.modelOpen&&window.addEventListener("scroll",this.handleScroll,!1),requestAnimationFrame(()=>{document.documentElement.addEventListener("click",this.onClickOutside,!1)})},closeThisComponent(){this.modelOpen=!1,document.documentElement.removeEventListener("click",this.onClickOutside,!1),window.removeEventListener("scroll",this.handleScroll,!1)},setPosition(){if(!this.modelOpen)return;self=this;if(!self.$el)return;let t=self.$el.getBoundingClientRect().bottom+10,e=self.$el.getBoundingClientRect().right-self.width-20;return setTimeout(function(){self.checkIfOffscreen()},1),"top: "+t+"px;left:"+e+"px;"},checkIfOffscreen(){let t=this;if(!t.$refs.uipdrop)return;let e=t.$refs.uipdrop;if(e.getBoundingClientRect().bottom+500>window.innerHeight){let i=window.innerHeight-t.$el.getBoundingClientRect().top+10;e.style.top="auto",e.style.bottom=i+"px"}},returnButtonSize(){let t="";return t=this.buttonsize&&"small"==this.buttonsize?"uip-padding-xxs":(this.buttonsize&&this.buttonsize,"uip-padding-xs")},returnButtonClass(){let t="";return t=this.buttonsize&&"small"==this.buttonsize?"uip-padding-xxs":(this.buttonsize&&this.buttonsize,"uip-padding-xs"),this.buttonstyle&&"primary"==this.buttonstyle?"uip-button-primary "+t:"uip-button-default "+t}},template:'<div class="uip-position-relative">        <div class="">          <tooltip v-if="tooltip" :tooltiptext="tooltiptext">            <div v-if="type == \'icon\'" @click="openThisComponent" class="uip-background-muted uip-border-round hover:uip-background-grey uip-cursor-pointer material-icons-outlined" type="button" :class="returnButtonSize()">{{icon}}</div>            <div v-if="type == \'text\'" @click="openThisComponent" class="uip-background-muted uip-border-round hover:uip-background-grey uip-cursor-pointer" type="button" :class="returnButtonSize()">{{buttontext}}</div>          </tooltip>          <div v-else-if="type == \'icon\'" @click="openThisComponent" class="uip-background-muted uip-border-round hover:uip-background-grey uip-cursor-pointer material-icons-outlined" type="button" :class="returnButtonSize()">{{icon}}</div>          <button v-else-if="type == \'text\'" @click="openThisComponent" type="button" :class="returnButtonClass()">{{buttontext}}</button>        </div>        <div v-show="modelOpen" :style="setPosition()" ref="uipdrop"        class="uip-shadow uip-position-fixed uip-dropdown-conatiner uip-background-default uip-border-round uip-border uip-z-index-9999">          <slot></slot>        </div>      </div>'}};