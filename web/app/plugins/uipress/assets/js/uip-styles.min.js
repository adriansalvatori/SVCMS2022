const UIPstylesOptions={data:()=>({loading:!0,screenWidth:window.innerWidth,translations:uipTranslations,masterPrefs:uipMasterPrefs,defaults:uipDefaults,preferences:uipUserPrefs,styles:[]}),watch:{},created:function(){window.addEventListener("resize",this.getScreenWidth)},computed:{formattedSettings(){return this.styles}},mounted:function(){this.getOptions()},methods:{getScreenWidth(){this.screenWidth=window.innerWidth},isSmallScreen(){return this.screenWidth<700},getOptions(){let t=this;data={action:"uip_get_styles",security:uip_ajax.security},jQuery.ajax({url:uip_ajax.ajax_url,type:"post",data:data,success:function(e){data=JSON.parse(e),t.loading=!1,data.error||(t.styles=data.styles)}})},themImport(t){if(this.isJSON(t)){let o=JSON.parse(t),a=this;for(var e in console.log(a.styles),o){let t=o[e];if(t.options){let o=t.options;for(var i in o){let t=o[i];t.value&&""!=t.value&&(a.styles[e].options[i].value=t.value),t.darkValue&&""!=t.darkValue&&(a.styles[e].options[i].darkValue=t.darkValue)}}}}},isJSON(t){try{JSON.parse(t);return!0}catch(t){return!1}},saveSettings(){let t=this;data={action:"uip_save_styles",security:uip_ajax.security,options:t.styles},jQuery.ajax({url:uip_ajax.ajax_url,type:"post",data:data,success:function(e){data=JSON.parse(e),t.loading=!1,data.error?uipNotification(t.translations.somethingWrong):uipNotification(t.translations.settingsSaved)}})},clearSettings(){let t=this.formattedSettings;for(const e in t){cat=t[e].options;for(let t=0;t<cat.length;t++)option=cat[t],Array.isArray(option.value)?option.value=[]:option.value="","darkValue"in option&&(Array.isArray(option.darkValue)?option.darkValue=[]:option.darkValue="")}},exportSettings(){self=this,ALLoptions=JSON.stringify(this.formattedSettings);var t=new Date,e=String(t.getDate()).padStart(2,"0"),i=String(t.getMonth()+1).padStart(2,"0"),o=t.getFullYear();date_today=i+"_"+e+"_"+o,filename="uip-styles-"+date_today+".json";var a="data:text/json;charset=utf-8,"+encodeURIComponent(ALLoptions),s=document.getElementById("uip-export-styles");s.setAttribute("href",a),s.setAttribute("download",filename),s.click()},importSettings(){self=this;var t=jQuery("#uip-import-settings")[0].files[0];if("application/json"==t.type)if(t.size>1e5)uipNotification(self.translations.fileToBig);else{var e=document.getElementById("uip-import-settings").files[0],i=new FileReader;i.readAsText(e,"UTF-8"),i.onload=function(t){json_settings=t.target.result,parsed=JSON.parse(json_settings),null!=parsed?(self.styles=parsed,uipNotification(self.translations.stylesImported)):uipNotification(self.translations.somethingWrong)}}else uipNotification(self.translations.notValidJson)}}},UIPstyles=uipVue.createApp(UIPstylesOptions);UIPstyles.component("output-options",{props:{translations:Object,alloptions:Object,activemodule:String,uipdata:Boolean},data:function(){return{loading:!0,settings:this.alloptions}},watch:{alloptions:{handler(t,e){this.settings=t,this.formatStyles()},deep:!0}},mounted:function(){this.loading=!1,this.formatStyles()},computed:{returnSettings(){return this.settings}},methods:{formatStyles(){let t="",e="",i=this.returnSettings;importurl=!1;for(const o in i){cat=i[o].options;for(let i=0;i<cat.length;i++)option=cat[i],"--uip-body-font-family"==option.cssVariable?option.value[0]&&(formattedFont="'"+option.value[0]+"', "+option.value[1],e=e+option.cssVariable+":"+formattedFont+"!important;",fontURL="https://fonts.googleapis.com/css2?family="+option.value[0]+":wght@300;400;700&display=swap",formattedURL=fontURL.replace(" ","%20"),importurl="@import url('"+formattedURL+"');"):""!=option.value&&(t=t+option.cssVariable+":"+option.value+";",1==option.global&&(e=e+option.cssVariable+":"+option.value+"!important;"))}t='html:not([data-theme="dark"]) {'+t,importurl&&(t=importurl+t),t+="}",t+='html[data-theme="dark"] {';for(const e in i){cat=i[e].options;for(let e=0;e<cat.length;e++)option=cat[e],option.darkValue&&(t=t+option.cssVariable+":"+option.darkValue+";")}t=(t+="}")+"html {"+e+"}",jQuery("#uip-variable-preview").html(t)},setDataFromComp(t,e){console.log(e),e=t},getdatafromComp:t=>t,returnBackgroundVariable:t=>"background-color:var("+t.cssVariable+");"},template:'<template v-for="(item, index) in returnSettings">      <div class="uip-text-l uip-text-emphasis uip-text-bold uip-margin-bottom-s uip-padding-s uip-background-muted uip-border-round uip-flex uip-flex-between">        <span>{{item.label}}</span>        <div class="uip-flex">          <span v-if="item.preview" @click="item.showPreview = !item.showPreview" class="material-icons-outlined uip-margin-right-xs uip-cursor-pointer hover:uip-background-grey">preview</span>          <span class="material-icons-outlined uip-cursor-pointer" @click="item.hidden = false" v-if="item.hidden">chevron_left</span>          <span class="material-icons-outlined uip-cursor-pointer" @click="item.hidden = true" v-if="!item.hidden">expand_more</span>        </div>      </div>      <div class="uip-margin-bottom-l uip-padding-s" v-if="item.hidden != true">        \x3c!-- PREVIEW --\x3e        <div class="uip-margin-bottom-m" v-html="item.preview" v-if="item.showPreview">        </div>        <div class="uip-flex uip-margin-bottom-m">          <div class="uip-w-300"></div>          <div class="uip-w-200 uip-padding-left-l uip-text-bold uip-text-muted">{{translations.default}}</div>          <div class="uip-w-200 uip-padding-left-l uip-text-bold uip-text-muted">{{translations.darkMode}}</div>        </div>        \x3c!-- OPTIONS BLOCK --\x3e        <div  v-for="option in item.options">           \x3c!-- data connect --\x3e          <div class="uip-flex uip-margin-bottom-xs" v-if="uipdata != true && option.premium == true">            <div class="uip-w-300">              <span class="uip-w-28 uip-h-28 uip-border-round" :style="{ background: option.cssVariable}"></span>              <span class="uip-text-bold uip-text-m uip-margin-bottom-xs">{{option.name}}</span>            </div>            <div class="uip-w-200 uip-padding-left-l uip-margin-bottom-s">              <feature-flag :translations="translations"></feature-flag>            </div>          </div>          \x3c!-- data connect --\x3e          <div class="uip-flex uip-margin-bottom-xs" v-else>            <div class="uip-w-300 uip-flex uip-flex-center uip-margin-bottom-xs">              <span class="uip-w-28 uip-h-28 uip-border-round uip-margin-right-xs uip-border" :style="returnBackgroundVariable(option)"></span>              <div class="uip-text-bold uip-text-m ">{{option.name}}</div>            </div>            \x3c!-- COLOR --\x3e            <template v-if="option.type == \'color\'">              <div class="uip-w-200 uip-padding-left-l">              <div class="uip-margin-bottom-xm uip-padding-xxs uip-border uip-border-round uip-w-200 uip-background-default uip-border-box">                <div class="uip-flex uip-flex-center">                  <span class="uip-margin-right-xs uip-text-muted">                      <uip-color-dropdown @color-change="option.value = getdatafromComp($event)" :color="option.value"></uip-color-dropdown>                  </span>                   <input v-model="option.value" type="search" placeholder="#HEX" class="uip-blank-input uip-margin-right-s " style="min-width:0;">                  <span class="uip-text-muted">                      <span class="material-icons-outlined uip-text-muted">color_lens</span>                  </span>                 </div>              </div>            </div>            <div class="uip-w-200 uip-padding-left-l">              <div class="uip-margin-bottom-xs uip-padding-xxs uip-border uip-border-round uip-w-200 uip-background-default uip-border-box" >                <div class="uip-flex uip-flex-center">                  <span class="uip-margin-right-xs uip-text-muted">                      <uip-color-dropdown @color-change="option.darkValue = getdatafromComp($event)" :color="option.darkValue"></uip-color-dropdown>                  </span>                   <input v-model="option.darkValue" type="search" placeholder="#HEX" class="uip-blank-input uip-margin-right-s " style="min-width:0;">                  <span class="uip-text-muted">                      <span class="material-icons-outlined uip-text-muted">color_lens</span>                  </span>                 </div>              </div>            </div>            </template>            \x3c!-- COLOR --\x3e            \x3c!-- FONT --\x3e            <div v-if="option.type == \'font\'" class="uip-w-200 uip-padding-left-l">              <font-select :selected="option.value" name="font" placeholder="Search Fonts" ></font-select>            </div>            \x3c!-- FONT --\x3e            \x3c!-- TEXT --\x3e            <div v-if="option.type == \'text\'" class="uip-w-200 uip-padding-left-l uip-margin-bottom-xs">              <input type="text" class="uip-w-100p" v-model="option.value" placeholder="px / %" >            </div>            \x3c!-- TEXT --\x3e          </div>        </div>        \x3c!-- END OPTIONS BLOCK --\x3e      </div>    </template>'}),UIPstyles.component("uip-color-dropdown",{props:["color"],data:function(){return{modelOpen:!1}},computed:{areWeOpen(){return this.modelOpen}},mounted:function(){},methods:{onClickOutside(t){const e=t.path||(t.composedPath?t.composedPath():void 0);!e||e.includes(this.$el)||this.$el.contains(t.target)||this.closeThisComponent()},openThisComponent(){this.modelOpen=1!=this.modelOpen,requestAnimationFrame(()=>{document.documentElement.addEventListener("click",this.onClickOutside,!1)})},closeThisComponent(){this.modelOpen=!1,document.documentElement.removeEventListener("click",this.onClickOutside,!1)},getdatafromComp:t=>t,returnData(t){this.$emit("color-change",t)}},template:'<div class="uip-position-relative">      <span @click="openThisComponent" class="uip-border-circle uip-h-18 uip-w-18 uip-border uip-display-block uip-cursor-pointer" v-bind:style="{\'background-color\' : color}">      </span>      <div v-if="areWeOpen"       class="uip-position-absolute uip-padding-s uip-background-default uip-border-round uip-shadow uip-min-w-200 uip-z-index-9999">        <uip-color-picker @color-change="returnData(getdatafromComp($event))" :color="color"></uip-color-picker>      </div>    </div>'}),UIPstyles.component("uip-color-picker",{props:{color:String},data:function(){return{modelOpen:this.isOpen}},computed:{areWeOpen(){return this.modelOpen}},mounted:function(){picker=this.$el.getElementsByClassName("uip-color-picker")[0];let t=this;startColor="",t.color&&(startColor=t.color),new iro.ColorPicker(picker,{width:250,color:startColor,layout:[{component:iro.ui.Box},{component:iro.ui.Slider,options:{id:"hue-slider",sliderType:"hue"}},{component:iro.ui.Slider,options:{sliderType:"saturation"}},{component:iro.ui.Slider,options:{sliderType:"value"}},{component:iro.ui.Slider,options:{sliderType:"alpha"}}]}).on("color:change",function(e){t.$emit("color-change",e.rgbaString)})},methods:{},template:'<div><div class="uip-color-picker"></div></div>'}),UIPstyles.component("font-select",{data:function(){return{fontSearch:"",options:[],allFontsData:[],ui:{dropOpen:!1}}},props:{selected:Array,name:String,placeholder:String},watch:{fontSearch:function(t,e){this.options=this.filterIt(this.allFontsData,this.fontSearch)},options:function(t,e){currentOptions=this.options.slice(0,20);for(let t=0;t<currentOptions.length;++t){currentFont=currentOptions[t];var i="@import url('https://fonts.googleapis.com/css2?family="+currentFont.fontName+":wght@300;400;700&display=swap');";jQuery("<style/>").append(i).appendTo(document.head)}}},mounted:function(){},computed:{runitonce(){this.queryFonts()},allFonts(){return this.runitonce,this.options.slice(0,30)}},methods:{queryFonts(){var t=this;jQuery.getJSON("https://www.googleapis.com/webfonts/v1/webfonts?sort=popularity&key=AIzaSyCsOWMT4eyd1vd4yN0-h7jZnXSCf2qDmio",function(e){allfonts=e.items,formattedFonts=[],jQuery.each(allfonts,function(t,e){temp=[],temp.fontName=e.family,temp.category=e.category,str="",font=str.concat("'",temp.fontName,"', ",temp.category),temp.fontFamily=font,formattedFonts.push(temp)}),listfonts=formattedFonts,t.allFontsData=listfonts,t.options=listfonts})},addSelected(t,e){1==this.single?e[0]=t:e.push(t)},filterIt:(t,e)=>t.filter(function(t){return Object.keys(t).some(function(i){return t[i].toLowerCase().includes(e.toLowerCase())})}),removeSelected(t,e){this.selected[0]="",this.selected[1]=""},ifSelected:(t,e)=>!(e.indexOf(t)>-1),ifInSearch:(t,e)=>(item=t.toLowerCase(),string=e.toLowerCase(),!!item.includes(string)),saveFont(t,e){this.selected[0]=t.fontName,this.selected[1]=t.category},onClickOutside(t){const e=t.path||(t.composedPath?t.composedPath():void 0);!e||e.includes(this.$el)||this.$el.contains(t.target)||this.closeThisComponent()},openThisComponent(){this.ui.dropOpen=!0,requestAnimationFrame(()=>{document.documentElement.addEventListener("click",this.onClickOutside,!1)})},closeThisComponent(){this.ui.dropOpen=!1,document.documentElement.removeEventListener("click",this.onClickOutside,!1)}},template:'<div class="uip-position-relative" @click="openThisComponent">      <div class="uip-margin-bottom-xs uip-padding-left-xxs uip-padding-right-xxs uip-padding-top-xxs uip-background-default uip-border uip-border-round uip-w-200 uip-cursor-pointer uip-h-32 uip-border-box">         <div class=" uip-flex ">          <div class="uip-flex-grow">            <span v-if="!selected[0]" class="selected-item" style="background: none;">              <span class="uk-text-meta">Select {{name}}...</span>            </span>            <span v-if="selected[0]"  class="uip-background-primary-wash uip-border-round uip-padding-xxs uip-padding-bottom-remove uip-padding-top-remove uip-display-inline-block uip-margin-right-xxs uip-margin-bottom-xxs">              <span>                {{selected[0]}}                <a class="uk-margin-small-left" href="#" @click="removeSelected(select,selected)">x</a>              </span>            </span>          </div>          <span class="material-icons-outlined uip-text-muted">expand_more</span>        </div>      </div>      <div v-if="ui.dropOpen" class="uip-position-absolute uip-padding-s uip-background-default uip-border-round uip-border uip-shadow uip-w-400 uip-border-box uip-z-index-9">        <div class="uip-flex uip-background-muted uip-padding-xxs uip-margin-bottom-s uip-border-round">          <span class="material-icons-outlined uip-text-muted uip-margin-right-xs">search</span>          <input class="uip-blank-input uip-flex-grow" type="text"           :placeholder="placeholder" v-model="fontSearch">        </div>        <div class="uip-h-200 uip-overflow-auto">          <ul v-for="option in allFonts">            <li @click="saveFont(option, selected)" class="uip-text-l" v-bind:style="{ \'font-family\': option.fontFamily}">              <span class="uip-link-muted uip-no-underline">{{option.fontName}}</span>            </li>          </ul>        </div>      </div>    </div>'}),UIPstyles.component("uip-offcanvas",{props:{icon:String,translations:Object,buttonsize:String,tooltip:Boolean,tooltiptext:String,type:String,buttontext:String,title:String},data:function(){return{create:{open:!1}}},methods:{openOffcanvas(){this.create.open=!0},closeOffcanvas(){document.activeElement&&document.activeElement.blur(),this.create.open=!1},returnButtonSize(){return this.buttonsize&&"small"==this.buttonsize?"uip-padding-xxs":"uip-padding-xs"}},template:'<div class="">        <div @click="openOffcanvas()" :class="returnButtonSize()" type="button"        class="uip-background-muted uip-border-round hover:uip-background-grey uip-cursor-pointer uip-flex" >          <span class="material-icons-outlined uip-margin-right-xxs">{{icon}}</span>          <span >{{buttontext}}</span>        </div>      </div>      <div v-if="create.open" class="uip-position-fixed uip-w-100p uip-h-viewport uip-hidden uip-text-normal"       style="background:rgba(0,0,0,0.3);z-index:99999;top:0;left:0;right:0;max-height:100vh"       :class="{\'uip-nothidden\' : create.open}">        \x3c!-- MODAL GRID --\x3e        <div class="uip-flex uip-w-100p uip-overflow-auto">          <div class="uip-flex-grow" @click="closeOffcanvas()" ></div>          <div class="uip-w-500 uip-background-default uip-padding-m uip-h-viewport uip-overflow-auto" >            <div  style="max-height: 100vh;">              \x3c!-- OFFCANVAS TITLE --\x3e              <div class="uip-flex uip-margin-bottom-s">                <div class="uip-text-xl uip-text-bold uip-flex-grow">{{title}}</div>                <div class="">                   <span @click="closeOffcanvas()"                    class="material-icons-outlined uip-background-muted uip-padding-xxs uip-border-round hover:uip-background-grey uip-cursor-pointer">                       close                    </span>                </div>              </div>              <slot></slot>            </div>          </div>        </div>      </div>'}),UIPstyles.component("theme-selector",{props:{translations:Object},data:function(){return{searchString:"",themes:[],loading:!0}},mounted:function(){datepicker=this,this.getThemes()},computed:{formattedThemes(){return this.themes}},methods:{getThemes(){let t=this;data={action:"uip_get_themes",security:uip_ajax.security},jQuery.ajax({url:uip_ajax.ajax_url,type:"post",data:data,success:function(e){data=JSON.parse(e),t.loading=!1,data.error?console.log(data.message):(t.themes=data,console.log(t.themes))}})},heartTheme(t){data={action:"uip_love_theme",security:uip_ajax.security,id:t.id},jQuery.ajax({url:uip_ajax.ajax_url,type:"post",data:data,success:function(e){data=JSON.parse(e),console.log(data),data.error?uipNotification(data.message):(data.state&&data.state,uipNotification(data.message),t.likes=parseInt(t.likes)+1)}})},importTheme(t){this.$emit("import-theme",t.json),uipNotification(this.translations.themeImported,{pos:"bottom-left",status:"primary"})},isInSearch(t){return thename=t.theme_title.toLowerCase(),desc=t.description.toLowerCase(),searchlc=this.searchString.toLowerCase(),!(!thename.includes(searchlc)&&!desc.includes(searchlc))}},template:'<div style="padding-bottom:100px">        <div class="uip-margin-bottom-m uip-padding-xs uip-background-muted uip-border-round">          <div class="uip-flex uip-flex-center">            <span class="uip-margin-right-xs uip-text-muted">              <span class="material-icons-outlined">search</span>            </span>             <input type="search" :placeholder="translations.searchCards" class="uip-blank-input uip-flex-grow"             v-model="searchString" autofocus>          </div>        </div>        <div class="uip-w-100p uip-margin-padding-l">          <div class="uip-grid uip-grid-small uip-inline-flex uip-flex-wrap uip-flex-row ">            <loading-placeholder v-if="loading"></loading-placeholder>            <template v-for="theme in formattedThemes" >              <div v-if="isInSearch(theme)" class="uip-width-100p">                <div class="uip-border-round uip-background-muted uip-padding-s uip-margin-bottom-m uip-flex uip-flex-column">                  <img :src="theme.img" class="uip-w-100p uip-border-round uip-margin-bottom-s">                  <div class="uip-flex uip-flex-row uip-margin-bottom-s">                    <div class="uip-text-bold uip-text-emphasis  uip-flex-grow uip-text-l">{{theme.theme_title}}</div>                    <div class="uip-flex uip-gap-xxs">                      <span  v-for="type in theme.theme_type"                      class="uip-background-primary-wash uip-border-round uip-padding-left-xxs uip-padding-right-xxs uip-text-bold uip-text-xs">                        {{type}}                      </span>                    </div>                  </div>                  <div class="uip-text-default uip-margin-bottom-s">{{theme.description}}</div>                  <div class="uip-flex uip-flex-center uip-gap-xs">                    <div class="uip-flex uip-flex-end uip-flex-left uip-flex-grow">                      <button @click="importTheme(theme)" v-if="!theme.locked" class="uip-button-secondary">{{translations.importTheme}}</button>                      <a href="https://uipress.co/pricing" target="_BLANK" v-if="theme.locked" class="uip-button-primary uip-flex uip-no-underline">                        <span class="material-icons-outlined uip-margin-right-xxs">lock</span>                        <span> {{translations.proTemplate}}</span>                      </a>                    </div>                    <div v-if="theme.created_by" class="uip-text-muted uip-flex uip-gap-xxs">                     <span class="material-icons-outlined">person</span>                     <span>{{theme.created_by}}</span>                    </div>                    <div  class="uip-text-muted uip-flex uip-gap-xxs" @click="heartTheme(theme)">                     <span class="material-icons-outlined uip-cursor-pointer">favorite</span>                     <span>{{theme.likes}}</span>                    </div>                  </div>                </div>              </div>            </template>          </div>        </div>    </div>'}),UIPstyles.component("loading-placeholder",{data:function(){return{}},methods:{doStuff(){}},template:'<svg class="uip-w-100p uip-margin-bottom-m" role="img" width="340" height="84" aria-labelledby="loading-aria" viewBox="0 0 340 84" preserveAspectRatio="none">      <title id="loading-aria">Loading...</title>      <rect x="0" y="0" width="100%" height="100%" clip-path="url(#clip-path)" style=\'fill: url("#fill");\'></rect>      <defs>        <clipPath id="clip-path">          <rect x="0" y="0" rx="3" ry="3" width="67" height="11" />          <rect x="76" y="0" rx="3" ry="3" width="140" height="11" />          <rect x="127" y="48" rx="3" ry="3" width="53" height="11" />          <rect x="187" y="48" rx="3" ry="3" width="72" height="11" />          <rect x="18" y="48" rx="3" ry="3" width="100" height="11" />          <rect x="0" y="71" rx="3" ry="3" width="37" height="11" />          <rect x="18" y="23" rx="3" ry="3" width="140" height="11" />          <rect x="166" y="23" rx="3" ry="3" width="173" height="11" />        </clipPath>        <linearGradient id="fill">          <stop offset="0.599964" stop-color="rgba(156, 155, 155, 13%)" stop-opacity="1">            <animate attributeName="offset" values="-2; -2; 1" keyTimes="0; 0.25; 1" dur="2s" repeatCount="indefinite"></animate>          </stop>          <stop offset="1.59996" stop-color="rgba(156, 155, 155, 20%)" stop-opacity="1">            <animate attributeName="offset" values="-1; -1; 2" keyTimes="0; 0.25; 1" dur="2s" repeatCount="indefinite"></animate>          </stop>          <stop offset="2.59996" stop-color="rgba(156, 155, 155, 13%)" stop-opacity="1">            <animate attributeName="offset" values="0; 0; 3" keyTimes="0; 0.25; 1" dur="2s" repeatCount="indefinite"></animate>          </stop>        </linearGradient>      </defs>    </svg>    <svg class="uip-w-100p" role="img" width="340" height="84" aria-labelledby="loading-aria" viewBox="0 0 340 84" preserveAspectRatio="none">      <title id="loading-aria">Loading...</title>      <rect x="0" y="0" width="100%" height="100%" clip-path="url(#clip-path)" style=\'fill: url("#fill");\'></rect>      <defs>        <clipPath id="clip-path">          <rect x="0" y="0" rx="3" ry="3" width="67" height="11" />          <rect x="76" y="0" rx="3" ry="3" width="140" height="11" />          <rect x="127" y="48" rx="3" ry="3" width="53" height="11" />          <rect x="187" y="48" rx="3" ry="3" width="72" height="11" />          <rect x="18" y="48" rx="3" ry="3" width="100" height="11" />          <rect x="0" y="71" rx="3" ry="3" width="37" height="11" />          <rect x="18" y="23" rx="3" ry="3" width="140" height="11" />          <rect x="166" y="23" rx="3" ry="3" width="173" height="11" />        </clipPath>        <linearGradient id="fill">          <stop offset="0.599964" stop-color="rgba(156, 155, 155, 13%)" stop-opacity="1">            <animate attributeName="offset" values="-2; -2; 1" keyTimes="0; 0.25; 1" dur="2s" repeatCount="indefinite"></animate>          </stop>          <stop offset="1.59996" stop-color="rgba(156, 155, 155, 20%)" stop-opacity="1">            <animate attributeName="offset" values="-1; -1; 2" keyTimes="0; 0.25; 1" dur="2s" repeatCount="indefinite"></animate>          </stop>          <stop offset="2.59996" stop-color="rgba(156, 155, 155, 13%)" stop-opacity="1">            <animate attributeName="offset" values="0; 0; 3" keyTimes="0; 0.25; 1" dur="2s" repeatCount="indefinite"></animate>          </stop>        </linearGradient>      </defs>    </svg>'}),UIPstyles.component("feature-flag",{props:{translations:Object},data:function(){return{loading:!0}},mounted:function(){},methods:{},template:'<a href="https://uipress.co/pricing/" target="_BLANK" class="uip-no-underline uip-border-round uip-background-primary-wash uip-text-bold uip-text-emphasis uip-display-inline-block" style="padding: var(--uip-padding-button)">      <div class="uip-flex">        <span class="material-icons-outlined uip-margin-right-xs">redeem</span>         <span>{{translations.preFeature}}</span>      </div>     </a>'}),jQuery("#uip-styles").length>0&&UIPstyles.mount("#uip-styles");